---
title: "My title"
subtitle: "My subtitle if needed"
author: 
  - Jeongwoo Kim
  - Jiwon Choi
thanks: "Code and data are available at: https://github.com/Kjeongwoo99/STA302H_Paper3"
date: today
date-format: long
abstract: "First sentence. Second sentence. Third sentence. Fourth sentence."
format: pdf
number-sections: true
bibliography: references.bib
---

```{r}
#| include: false
#| warning: false
#| message: false

library(tidyverse)
library(readr)
library(palmerpenguins)
library(ggrepel)
library(maps)
library(here)
library(ggplot2)
library(dplyr)
library(knitr)
library(kableExtra)
library(statebins)

#### Read in necessary data and model ####
cleaned_data_post_strat <-read_csv(file = here("data/analysis_data/usa_00002_cleaned.csv"), show_col_types = FALSE)
cleaned_data_survey <- read_csv(file = here("data/analysis_data/ns20191003_cleaned.csv"), show_col_types = FALSE)
survey_model <- readRDS(file = here("models/consider_trump.rds"))
predicton_model <- readRDS(file = here("models/census_data_with_predictions.rds"))
```

# Introduction

You can and should cross-reference sections and sub-sections. We use @citeR and @rohan.

The remainder of this paper is structured as follows. @sec-data....

# Data {#sec-data}

We have used two datasets for this study. One is the U.S election survey data of Democracy Fund + UCLA Nationscape dataset from the Voter Study Group, conducted on October 3, 2019. Second is the census data from IPUMS America Census Service, which is used as the post-stratification data for the survey data to adjust the weight.

## Survey Data

This survey data is an 18-month election study conducted by UCLA researchers with roughly 6250 online interviews each from from July 2019 to February 2021 (@citeSurveyData). The sample is weighted to represent the U.S. adult population (@citeSurveyData). Nationscape groups weight on the following important factors: gender, the four major census regions, race, Hispanic ethnicity, household income, education, age, language spoken at home, nativity, 2016 presidential vote, and the urban-rural mix of the respondent's ZIP code (@citeSurveyData). According to the data, Male make up 48.3% while female make up 51.3% (@citeSurveyData). 74.2% of the respondents are White, 6.8% are Asian/Pacific, 12% are Black (@citeSurveyData). 20.4% are those between 18-29, 33.4% are 30-49, 32.4% are 50-69, 3.3% are 70+ (@citeSurveyData). On average, 5.1 percent declined immediately among those who are selected for the survey. 16.7 percent of the respondents did not complete the survey. Another 5.9 percent were categorized as speeding or straight-line which means they completed the survey in less than 6 minutes or selected the same response for every question in the three policy question batteries. Leaving these out leave 72.4 percent of the original sample for the analysis.

The Nationscape survey's strength lies in its methodological rigor - the effectiveness in collecting large samples from the U.S. citizen and its weighting strategy desinged to mirror the U.S. adult population by including weight factors such as age, gender, race and income and more. As they filter out inaccurate or missing data, it makes sure that the data collected are accurate and ensures data integrity. While other datasets such as the General Social Survey (GSS) and the American National Election Studies (ANES) are available, the Nationscape dataset's frequency (surveys collected every week) give it an advantage in analyzing electoral trends and shifts in real-time. Its' extensive sample size also justifies the choice of this dataset.

For our analysis, we decided to focus on five demographics: age, gender, education, race and state. Age is important because in general, voters tend to become more conservative as they get older. To account for the age difference, we divided the age group into four categories: 18-29, 30-49, 50-69 and 70+.

Gender is also an important category because in general, men tend be more conservative and women tend to be more liberal. Recently, gender issues are growing social issues and this may affect the election, hence we wanted to explore how this affects our model.

Education is also an interesting factor. In the past, non-college white voters used to support Democrats while college-educated white voters supported Republicans (@Harris). However, there has been a switch in this trend as 61 percent of non-college white voters showed their support wheres just 45 percent of college-educated white voters did in the exit polls (@Harris). Only 37 percent of those without a degree cast their votes for Democrats while 53 percent with a degree did so (@Harris). We categorized education into four categories: 'High school or less', 'Some college', 'College degree', 'Postgrad'.

Race also needs some attention because normally non-white groups are highly in favour of Democrats regardless of candidates and white swing by depending on candidates. According to the statistics collected in 2016, 93% of black, 71% of Latino, 68% of Asian support democrats while only 41% of white support democrats (@Prokop). As white voters make up 74% of the voting population, it is really important for both parties to attain this demographic group.

Lastly, states are very important as some states historically favor conservatives while some states vote for democrats. In general, the west and the east coasts are democrat supporters whereas south are conservative supporters.

## Post-stratification Data

IPUMS ("Integrated Public Use Microdata Series") is a website that offers database of samples of the American population from the American Community Surveys of 2000-present. These samples provide rich qualitative information on the long-term changes in the population. We selected the '' data as the post-stratification dataset for our research. The ACS is an ongoing survey that collects data monthly, which is then combined into 1-year, 3-year, and 5-year aggregates. It then uses stratified sampling where the U.S population is broken down into sub-groups and initial weights are assigned to each respondent. 

One strength of the IPUMS survey is the fact that it provides a comprehensive and extensive data with detailed demographic of the U.S. population with social, economic and housing characteristics, which is very useful in our analysis of the 2020 U.S presidential election forecast. The longitudinal data of this survey also allows researchers to analyze trends over time. The U.S. Census Bureau offers credibility of the data with high quality checks. The post-stratification process ensures correcting for sampling biases and non-response. On the other hand, since the survey relies on self-report, there lies a risk of response bias inherently. While it is an ongoing survey, there is still a time lag between the data collection and data availability. However, the large sample size, consistency and reliability of the data collection, the integrated data over time with post-stratification can justify the decision to utilize IPUMS data over other sources. 

The variables we have decided to use in this analysis from the dataset are 'sex', 'race', 'stateicp', 'age_group', and 'educd'. We have filtered out the respondents who have answered 'other' or no available sex data from the raw dataset for simplicity of the analysis. Therefore, 'Sex' is categorized into 'Male' and 'Female'. 'Race' is divided into 'White', 'Black', 'Asian', 'American Indian' and 'Other'. As mentioned earlier, the fact that white, black and Asian together make up around 93 percent of the U.S population, this categorization is justified. 'stateicp' is a record of all the states in the U.S. We have used the abbreviations for each state, for example, 'CT' for Connecticut, 'ME' for Maine, 'MA' for Massachusetts. We have the data of 55 states in total. 'age_group' categorized the respondents' age into four groups: '18-29', '30-49', '50-64' and '65+'. 'education' is divided into four categories: 'High school or less', 'Some college', 'College degree', 'Postgrad'. We filtered out those unknowns, and cleaned the dataset by assigning each respondent to the right category accordingly. 

```{r fig.width=10, fig.height=5}
#| echo: false
#| message: false
#| warning: false
#| label: fig-distribution-by-age-group
#| fig-cap: Distribution of Sample and Population by Age Group

# Read in the survey data
survey_data <- cleaned_data_survey

# Read in the post-stratification data
post_strat_data <- cleaned_data_post_strat

# Count the number of occurrences in each age group and calculate percentages for the survey data
survey_counts <- survey_data %>%
  group_by(age_group) %>%
  summarise(count = n()) %>%
  mutate(percentage = (count / sum(count)) * 100)  # Calculate percentage

# Count the number of occurrences in each age group and calculate percentages for the post-strat data
post_strat_counts <- post_strat_data %>%
  group_by(age_group) %>%
  summarise(count = n()) %>%
  mutate(percentage = (count / sum(count)) * 100)  # Calculate percentage

# Combine the percentages into a single data frame for plotting
combined_percentages <- rbind(
  data.frame(dataset = 'Survey', age_group = survey_counts$age_group, percentage = survey_counts$percentage),
  data.frame(dataset = 'Post-Strat', age_group = post_strat_counts$age_group, percentage = post_strat_counts$percentage)
)

# Plot the percentages with specified bar width and percentage on y-axis, and label each bar
ggplot(combined_percentages, aes(x = age_group, y = percentage, fill = dataset)) +
  geom_bar(stat = "identity", position = position_dodge(width = 0.8), width = 0.7) +
  geom_text(aes(label = sprintf("%.1f%%", percentage)),
            position = position_dodge(width = 0.8), 
            vjust = -0.3, # Adjust text position
            color = "black",
            size = 3) + 
  labs(x = "Age Group", y = "Proportion", title = "Distribution of Sample and Population by Age Group") +
  theme_minimal() +
  scale_fill_manual(values = c("orange", "green"))
```

```{r fig.width=10, fig.height=5}
#| echo: false
#| message: false
#| warning: false
#| label: fig-distribution-by-gender
#| fig-cap: Distribution of Sample and Population by Gender

# Read in the survey data
survey_data <- cleaned_data_survey

# Read in the post-stratification data
post_strat_data <- cleaned_data_post_strat

# Calculate percentages for the survey data by gender
survey_gender <- survey_data %>%
  group_by(gender) %>%
  summarise(count = n()) %>%
  mutate(percentage = (count / sum(count)) * 100)  # Calculate percentage

# Calculate percentages for the post-strat data by gender
post_strat_gender <- post_strat_data %>%
  group_by(gender) %>%
  summarise(count = n()) %>%
  mutate(percentage = (count / sum(count)) * 100)  # Calculate percentage

# Combine the gender percentages into a single data frame for plotting
combined_gender_percentages <- rbind(
  data.frame(dataset = 'Survey', gender = survey_gender$gender, percentage = survey_gender$percentage),
  data.frame(dataset = 'Post-Strat', gender = post_strat_gender$gender, percentage = post_strat_gender$percentage)
)

# Plot the gender percentages with specified bar width and percentage on y-axis, and label each bar
ggplot(combined_gender_percentages, aes(x = gender, y = percentage, fill = dataset)) +
  geom_bar(stat = "identity", position = position_dodge(width = 0.8), width = 0.7) +
  geom_text(aes(label = sprintf("%.1f%%", percentage)),
            position = position_dodge(width = 0.8), 
            vjust = -0.3, # Adjust text position
            color = "black",
            size = 3) + 
  labs(x = "Gender", y = "Proportion", title = "Distribution of Sample and Population by Gender") +
  theme_minimal() +
  scale_fill_manual(values = c("orange", "green"))
```

```{r fig.width=10, fig.height=5}
#| echo: false
#| message: false
#| warning: false
#| label: fig-distribution-by-race
#| fig-cap: Distribution of Sample and Population by Race Ethnicity
# Read in the survey data
survey_data <- cleaned_data_survey
# Read in the post-stratification data
post_strat_data <- cleaned_data_post_strat
# Calculate percentages for the survey data by race
survey_race <- survey_data %>%
  group_by(race) %>%
  summarise(count = n()) %>%
  mutate(percentage = (count / sum(count)) * 100)  # Calculate percentage
# Calculate percentages for the post-strat data by race
post_strat_race <- post_strat_data %>%
  group_by(race) %>%
  summarise(count = n()) %>%
  mutate(percentage = (count / sum(count)) * 100)  # Calculate percentage
# Combine the race percentages into a single data frame for plotting
combined_race_percentages <- rbind(
  data.frame(dataset = 'Survey', race = survey_race$race, percentage = survey_race$percentage),
  data.frame(dataset = 'Post-Strat', race = post_strat_race$race, percentage = post_strat_race$percentage)
)
# Adjust the factor levels for the 'race' column to specify the order
combined_race_percentages$race <- factor(combined_race_percentages$race, 
                                                    levels = c("White", "Black", "Asian", "American Indian", "Other"))
# Plot the race percentages with specified bar width and percentage on y-axis, and label each bar
ggplot(combined_race_percentages, aes(x = race, y = percentage, fill = dataset)) +
  geom_bar(stat = "identity", position = position_dodge(width = 0.8), width = 0.7) +
  geom_text(aes(label = sprintf("%.1f%%", percentage)),
            position = position_dodge(width = 0.8), 
            vjust = -0.3, # Adjust text position
            color = "black",
            size = 3) + 
  labs(x = "Race", y = "Proportion", title = "Distribution of Sample and Population by Race Ethnicity") +
  theme_minimal() +
  scale_fill_manual(values = c("orange", "green"))
```

```{r fig.width=10, fig.height=5}
#| echo: false
#| message: false
#| warning: false
#| label: fig-distribution-by-education
#| fig-cap: Distribution of Sample and Population by Education
# Read in the survey data
survey_data <- cleaned_data_survey
# Read in the post-stratification data
post_strat_data <- cleaned_data_post_strat
# Calculate percentages for the survey data by education
survey_education <- survey_data %>%
  group_by(education) %>%
  summarise(count = n()) %>%
  mutate(percentage = (count / sum(count)) * 100)  # Calculate percentage
# Calculate percentages for the post-strat data by education
post_strat_education <- post_strat_data %>%
  group_by(education) %>%
  summarise(count = n()) %>%
  mutate(percentage = (count / sum(count)) * 100)  # Calculate percentage
# Combine the education percentages into a single data frame for plotting
combined_education_percentages <- rbind(
  data.frame(dataset = 'Survey', education = survey_education$education, percentage = survey_education$percentage),
  data.frame(dataset = 'Post-Strat', education = post_strat_education$education, percentage = post_strat_education$percentage)
)
# Adjust the factor levels for the 'education' column to specify the order
combined_education_percentages$education <- factor(combined_education_percentages$education, 
                                                    levels = c("High school or less", "Some college", "College degree", "Postgrad"))
# Plot the education percentages with the adjusted order
ggplot(combined_education_percentages, aes(x = education, y = percentage, fill = dataset)) +
  geom_bar(stat = "identity", position = position_dodge(width = 0.8), width = 0.7) +
  geom_text(aes(label = sprintf("%.1f%%", percentage)),
            position = position_dodge(width = 0.8), 
            vjust = -0.3, # Adjust text position
            color = "black",
            size = 3) + 
  labs(x = "Education", y = "Proportion", title = "Distribution of Sample and Population by Education") +
  theme_minimal() +
  scale_fill_manual(values = c("orange", "green"))
```

```{r}
#| echo: false
#| message: false
#| warning: false
#| label: tbl-voters-intention-to-vote-for-trump
#| tbl-cap: Voters Intention to Support Trump
data <- cleaned_data_survey

# Prepare the data with specified order
trump_counts <- data %>%
  mutate(consider_trump = factor(consider_trump, levels = c("Yes", "No", "Other"))) %>%
  count(consider_trump, name = "Number of Respondents") %>%
  mutate(`Proportion (%)` = (`Number of Respondents` / sum(`Number of Respondents`)) * 100) %>%
  mutate(`Proportion (%)` = round(`Proportion (%)`, 2)) %>%
  rename(`Response` = consider_trump)

# Use kable to create the table
kable(trump_counts, format = "latex", booktabs = TRUE, align = "c") %>%
  kable_styling(latex_options = c("striped", "scale_down", "hold_position"), full_width = FALSE)
```

```{r}
#| echo: false
#| message: false
#| warning: false
#| label: tbl-voters-intention-of-their-primary-party
#| tbl-cap: Voters Intention of Their Primary Party
data <- cleaned_data_survey

# Prepare the data with specified order
party_preference_counts <- data %>%
  mutate(primary_party = factor(primary_party, levels = c("Democratic", "Republican", "Other"))) %>%
  count(primary_party, name = "Number of Respondents") %>%
  mutate(`Proportion (%)` = (`Number of Respondents` / sum(`Number of Respondents`)) * 100) %>%
  mutate(`Proportion (%)` = round(`Proportion (%)`, 2)) %>%
  rename(`Party Preference` = primary_party)

# Use kable to create the table
kable(party_preference_counts, format = "latex", booktabs = TRUE, align = "c") %>%
  kable_styling(latex_options = c("striped", "scale_down", "hold_position"), full_width = FALSE)
```

# Model

For our study, we employ a technique called multilevel regression with post-stratification (MRP). This approach involves creating a model based on a smaller data set, such as our survey data, and then extending the model's findings to a larger population.


```{r}
#| echo: false
#| message: false
#| warning: false
model <- survey_model

# Assuming 'model' is your model object from rstanarm
library(broom.mixed)

coefficients <- broom.mixed::tidy(model, conf.int = TRUE)

# Assuming you have knitr and kableExtra already installed and loaded
library(knitr)
library(kableExtra)

knitr::kable(coefficients,
             caption = "Coefficients from the Model",
             digits = 2) %>%
  kableExtra::kable_styling(latex_options = "scale_down")

```


## Model set-up

Define $y_i$ as the number of seconds that the plane remained aloft. Then $\beta_i$ is the wing width and $\gamma_i$ is the wing length, both measured in millimeters.

```{=tex}
\begin{align} 
y_i|\mu_i, \sigma &\sim \mbox{Normal}(\mu_i, \sigma) \\
\mu_i &= \alpha + \beta_i + \gamma_i\\
\alpha &\sim \mbox{Normal}(0, 2.5) \\
\beta &\sim \mbox{Normal}(0, 2.5) \\
\gamma &\sim \mbox{Normal}(0, 2.5) \\
\sigma &\sim \mbox{Exponential}(1)
\end{align}
```
We run the model in R [@citeR] using the `rstanarm` package of @rstanarm. We use the default priors from `rstanarm`.

# Results

```{r}
#| echo: false
#| eval: true
#| label: tbl-modelresults
#| tbl-cap: "Explanatory models of flight time based on wing width and wing length"
#| warning: false

library(rstanarm)

survey_data$consider_trump_binary <- ifelse(survey_data$consider_trump == "Yes", 1, 0)
survey_model_now <- glm(consider_trump_binary ~ gender + education + age_group + race + state,data = survey_data,family = binomial(link = "logit"))
  
# get proportions by demographic, then find proportion of each cell relative to population
post_props <- post_strat_data %>% 
  group_by(state, race, age_group, gender, education) %>% 
  summarise(n = n(), .groups ='drop') %>% 
  group_by(state) %>% 
  mutate(prop = n/sum(n))

# generate predictions for each of our grouped cells
post_props$estimate <- predict.glm(survey_model_now, newdata = post_props,
                          type = "response")

# create a new column with number of voters from each cell voting Trump
post_props <- post_props %>% mutate(num_voters = n*estimate)

# get errors for our prediction
errors <- predict.glm(survey_model_now, newdata = post_props,
                      type = "response", se.fit = T)
lower <- errors$fit - errors$se.fit
upper <- errors$fit + errors$se.fit

# combine the proportions and the errors we generated
post_props_error <- cbind(post_props, lower, upper)
post_props_error <- post_props_error %>% 
  rename("lower" = ...10,
         "upper" = ...11)

# create a new column with number of voters from each cell voting Biden
post_props_error <- post_props_error %>% mutate(num_voters_lower = n*lower,
                                num_voters_upper = n*upper)

# create a new dataset which contains upper and lower estimates for proportions
# of votes for each state
vote_trump <- post_props_error %>% mutate(trump_prop=estimate*prop,
                                       trump_prop_lower = lower*prop,
                                       trump_prop_upper = upper*prop) %>%
  group_by(state) %>%
  summarise(trump_predict = sum(trump_prop),
            trump_prop_lower = sum(trump_prop_lower),
            trump_prop_upper = sum(trump_prop_upper))

```

```{r stateplot} 
#| echo: false 
#| message: false
#| label: fig-modelresults
#| fig-cap: "Proportion of each State Voting for Trump"
#| warning: false

# get state by state proportions for our polling data
survey_props <- survey_data %>% 
  group_by(state, consider_trump_binary) %>% 
  summarise(n = n()) %>% 
  mutate(prop = n/sum(n))

# combine the polling data proportions with the post-stratification data
combined_trump <- inner_join(survey_props, vote_trump, by = "state")
combined_trump  <- combined_trump %>% 
  filter(consider_trump_binary == 1)

# arrange our proportions for each state in descending order

stateprops_plot <- combined_trump %>% arrange(desc(trump_predict)) %>% 
  mutate(support = ifelse(trump_predict >= 0.5, "Trump", "Biden"))

# plot the results, with a line on 50% because of the electoral college

stateprops_plot %>% ggplot(aes(y = reorder(state, trump_predict), x = trump_predict, 
                               color = support)) +
  geom_point(stat = "identity") +
  geom_errorbar(aes(xmin = trump_prop_lower, xmax = trump_prop_upper)) +
  geom_vline(xintercept = 0.5, linetype = "dashed", color = "green") +
  labs(title = "Estimated Proportion of State Voting for Joe Biden",
       x = "Percentage", y= "State",
       color = "Support") +
  scale_x_continuous(labels = scales::percent) +
  theme(axis.text.y = element_text(size = 5)) +
  scale_color_manual(values = c("Blue", "Red"))
```

Figure \@ref(fig:stateplot) shows us the estimated of proportion of support for Trump and Biden by state using MRP with the inclusion of error terms. Each dot represents the point estimate of the proportion of support for Biden (blue) or Trump (red) in each state. Horizontal Lines extending from the dots represent confidence intervals for these estimates. The length of each line indicates the uncertainty associated with each estimate. For instance, we can see that this uncertainty lies between 50 percent to slightly higher than 80 percent for Trump in MT (Massachusetts). The dashed green line in the middle at the 50 percent mark represents the threshold for majority support. On the y-axis, each state is listed with its abbreviations and is ordered based on the proportion of support for Trump from the highest at the top to the lowest at the bottom.

From figure \@ref(fig:stateplot), it seems that majority of the states support Biden. Only 7 states out of 51 have its point estimate greater than 50 percent for Trump. However, the horizontal lines of confidence intervals of some states overlapping the green mark give some hope for the Republicans. However, excluding these contesting states, our model suggests that only 3 states are definitely in favor of Trump whereas 
35 states are definitely supporting Biden. 

```{r educationplot} 
#| echo: false 
#| message: false 
#| warning: false 
#| fig-cap: "How different education levels of voters affect voting for Trump"

# Aggregating data by education level
post_props_education <- post_strat_data %>% 
  group_by(education, race, age_group, gender, state) %>%  # Adjust based on variables of interest
  summarise(n = n(), .groups ='drop') %>%
  group_by(education) %>%
  mutate(prop = n/sum(n))

# Generate predictions for each grouped cell based on education
post_props_education$estimate <- predict.glm(survey_model_now, newdata = post_props_education, type = "response")

# Calculate the number of voters from each cell voting for Trump
post_props_education <- post_props_education %>% mutate(num_voters = n * estimate)

# Get errors for the prediction
errors_education <- predict.glm(survey_model_now, newdata = post_props_education,
                                type = "response", se.fit = TRUE)
lower_education <- errors_education$fit - errors_education$se.fit
upper_education <- errors_education$fit + errors_education$se.fit

# Combine the proportions and the errors generated
post_props_education_error <- cbind(post_props_education, lower_education, upper_education) %>% rename(lower = ...10, upper = ...11)

# Aggregate predictions by education level
vote_trump_education <- post_props_education_error %>%
  mutate(trump_prop = estimate * prop,
         trump_prop_lower = lower * prop,
         trump_prop_upper = upper * prop) %>%
  group_by(education) %>%
  summarise(trump_predict = sum(trump_prop),
            trump_prop_lower = sum(trump_prop_lower),
            trump_prop_upper = sum(trump_prop_upper))

vote_trump_education %>% ggplot(aes(y = reorder(education, trump_predict), x = trump_predict)) +
  geom_point(stat = "identity") +
  geom_errorbar(aes(xmin = trump_prop_lower, xmax = trump_prop_upper)) +
  geom_vline(xintercept = 0.5, linetype = "dashed", color = "green") +
  labs(title = "Estimated Proportion of Voters for Trump by Education Level",
       x = "Percentage", y= "Education",
       color = "Support") +
  scale_x_continuous(labels = scales::percent) +
  theme(axis.text.y = element_text(size = 5)) +
  scale_color_manual(values = c("Blue", "Red"))

```

Figure \@ref(fig:educationplot) presents the estimated proportion of voters for Trump by education level, divided into four categories: 'High school or less', 'Some college', 'College degree', 'Postgrad'. Each black dot represents the point estimate of the proportion of voters within the corresponding education category who are predicted to vote for Trump. The horizontal lines extending to the left and right of each dot represent the confidence intervals around the estimate, which reflect the uncertainty. 

It shows that regardless of education level, the level of support for Trump lies below 40 percent. The Republican party does not have majority, including the error bars across all education levels. Voters with "High school or less" education appear to have the lowest estimated support for Trump, which does not align with various exit polls and analyses from the 2020 election suggesting that Trump had substantial support among voters without a college degree. Conversely, Voters with 'Some college' and 'Postgrad' education are the two groups that are more in support of Trump, which is exactly the opposite of what we have expected.


# Discussion

## First discussion point {#sec-first-point}

If my paper were 10 pages, then should be be at least 2.5 pages. The discussion is a chance to show off what you know and what you learnt from all this.

## Second discussion point

## Third discussion point

## Weaknesses and next steps

Weaknesses and next steps should also be included.

\newpage

\appendix

# Appendix {.unnumbered}

# Additional data details

# Model details {#sec-model-details}

## Posterior predictive check

In @fig-ppcheckandposteriorvsprior-1 we implement a posterior predictive check. This shows...

In @fig-ppcheckandposteriorvsprior-2 we compare the posterior with the prior. This shows...

```{r}
#| eval: true
#| echo: false
#| message: false
#| warning: false
#| label: fig-ppcheckandposteriorvsprior
#| layout-ncol: 2
#| fig-cap: "Examining how the model fits, and is affected by, the data"
#| fig-subcap: ["Posterior prediction check", "Comparing the posterior with the prior"]


```

## Diagnostics

@fig-stanareyouokay-1 is a trace plot. It shows... This suggests...

@fig-stanareyouokay-2 is a Rhat plot. It shows... This suggests...

```{r}
#| echo: false
#| eval: true
#| message: false
#| warning: false
#| label: fig-stanareyouokay
#| fig-cap: "Checking the convergence of the MCMC algorithm"
#| fig-subcap: ["Trace plot", "Rhat plot"]
#| layout-ncol: 2


```

\newpage

# References
